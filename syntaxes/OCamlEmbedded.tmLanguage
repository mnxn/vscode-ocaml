<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ml</string>
		<string>mli</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\b(module|class|)\s.*?=\s*$|\bbegin|sig|struct|(object(\s*\(_?[a-z]+\))?)\s*$|\bwhile\s.*?\bdo\s*$|^let(?:\s+rec)?\s+[a-z_][a-zA-Z0-9_]*\s+(?!=)\S)</string>
	<key>foldingStopMarker</key>
	<string>(\bend(\s+in)?[ \t]*(;{1,2}|=)?|\bdone;?|^\s*;;|^\s*in)[ \t]*$</string>
	<key>keyEquivalent</key>
	<string>^~O</string>
	<key>name</key>
	<string>OCamlEmbedded</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module-binding.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module-definition.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.other.module.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.module-binding.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(let)\s+(module)\s+([A-Z][a-zA-Z0-9'_]*)\s*(=)</string>
			<key>name</key>
			<string>meta.module.binding</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(let)\s+(open)\s+([A-Z][a-zA-Z0-9'_]*)(?=(\.[A-Z][a-zA-Z0-9_]*)*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module-binding.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.other.module.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\s|$)</string>
			<key>name</key>
			<string>meta.module.openbinding</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.module-reference.ocamlembedded</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)([A-Z][a-zA-Z0-9'_]*)</string>
					<key>name</key>
					<string>support.other.module.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(let|and)\s+(?!\(\*)((rec\s+)([a-z_][a-zA-Z0-9_']*)\b|([a-z_][a-zA-Z0-9_']*|\([^)]+\))(?=\s)((?=\s*=\s*(?=fun(?:ction)\b))|(?!\s*=)))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function-definition.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.funtion-definition.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ocamlembedded</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:(:)\s*([^=]+))?(?:(=)|(=)\s*(?=fun(?:ction)\b))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.function.type-constraint.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.let-function.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=(\(|\s))(fun)\s</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function-definition.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(-&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.function-definition.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.anonymous-function.definition.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(?=type\s)</string>
			<key>end</key>
			<string>(?=;;|\[%|\[@@|\b(let|end|val|module|include|open|exception|class|external)\b)</string>
			<key>name</key>
			<string>meta.type-definition-group.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(type|and)\s+([^=]*)(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.type-definition.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.type-definition.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;;|\[%|\[@@|\b(type|and|let|end|val|module|include|open|exception|class|external)\b)</string>
					<key>name</key>
					<string>meta.type-definition.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(type|and)\s+([^=]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.type-definition.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.type-definition.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;;|\[%|\[@@|\b(type|and|let|end|val|module|exception|class|external)\b)</string>
					<key>name</key>
					<string>meta.type-definition.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(with|function)(?=(?:\s*$|.*-&gt;))\b|((?&lt;!\S)(\|)(?=(\w|\s).*-&gt;))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.match-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.function-definition.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control.match-definition.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:(-&gt;)|\b(when)\b|\s(?=\|))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.match-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.match-condition.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.pattern-match.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#matchpatterns</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class-type-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class-type.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class\s+type\s+)((\[\s*('[A-Za-z][a-zA-Z0-9_']*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_']*)*)\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class.type-definition.ocamlembedded</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[ \t]*(class)(?:\s+(?!(?:virtual)\s+))((\[\s*('[A-Za-z][a-zA-Z0-9_']*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_']*)*)\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(=)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[ \t]*(class\s+virtual\s+)((\[\s*('[A-Za-z][a-zA-Z0-9_']*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_']*)*)\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(=)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.virtual.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.class-type-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class-type.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(class\s+type\s+virtual)((\[\s*('[A-Za-z][a-zA-Z0-9_']*(?:\s*,\s*'[A-Za-z][a-zA-Z0-9_']*)*)\s*\]\s+)?[a-z_][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.class.virtual.type-definition.ocamlembedded</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.record.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.record.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.record.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bwith\b</string>
					<key>name</key>
					<string>keyword.other.language.ocamlembedded</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\bmutable\s+)?\b([a-z_][a-zA-Z0-9_']*)\s*(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.storage.modifier.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>source.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.record.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(;|(?=}))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.record.definition.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(object)\s*(?:(\()(_?[a-z]+)(\)))?\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.object-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.self-binding.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.self-binding.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.self-binding.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(end)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.object.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.expression.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.object.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(method)\s+(virtual\s+)?(private\s+)?([a-z_][a-zA-Z0-9'_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.method-definition.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.method-definition.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.method-restriction.ocamlembedded</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.method.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(=|:)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.method.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(constraint)\s+([a-z_'][a-zA-Z0-9'_]*)\s+(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.language.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#[a-z_][a-zA-Z0-9'_]*)|(int|char|float|string|list|array|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t)|([a-z_][a-zA-Z0-9'_]*)\s*$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.polymorphic-variant.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.object.type-constraint.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.method-call.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=\w|\)|')(#)[a-z_][a-zA-Z0-9'_]*</string>
			<key>name</key>
			<string>meta.method-call.ocamlembedded</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.module.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.module-definition.ocamlembedded</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.module-type.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(module)\s+([A-Z_][a-zA-Z0-9'_]*)(?:\s*(:)\s*([A-Z][a-zA-Z0-9'_]*)?)?</string>
			<key>name</key>
			<string>meta.module.ocamlembedded</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module-type-definition.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.module-type.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[ \t]*(module\s+type\s+)([A-Z][a-zA-Z0-9'_]*)</string>
			<key>name</key>
			<string>meta.module.type.ocamlembedded</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(sig)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module.signature.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(end)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module.signature.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.expression.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.module.signature.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#module-signature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(struct)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module.structure.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(end)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.module.structure.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.module.structure.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#moduleref</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(open)\s+([A-Z][a-zA-Z0-9'_]*)(?=(\.[A-Z][a-zA-Z0-9_]*)*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.other.module.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\s|$)</string>
			<key>name</key>
			<string>meta.module.open.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.module-reference.ocamlembedded</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)([A-Z][a-zA-Z0-9'_]*)</string>
					<key>name</key>
					<string>support.other.module.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.exception.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(exception)\s+([A-Z][a-zA-Z0-9'_]*)(?:\s+(of))?\b</string>
			<key>name</key>
			<string>meta.exception.ocamlembedded</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=(\[&lt;)(?![^\[]+?[^&gt;]]))</string>
			<key>end</key>
			<string>(&gt;])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.camlp4-stream.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>source.camlp4.embedded.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.camlp4.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lists</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#arrays</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()(?=(~[a-z][a-zA-Z0-9_]*:|("(\\"|[^\\"])*")|[^\(\)~"])+(?&lt;!:)(:&gt;|:(?![:=])))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.type-constraint.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;!:)(:&gt;|:(?![:=]))(.*?)(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.type-constraint.ocamlembedded</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.type-constraint.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type-constraint.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[a-zA-Z]+</string>
			<key>name</key>
			<string>keyword.other.directive.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^[ \t]*#[0-9]*</string>
			<key>name</key>
			<string>keyword.other.directive.line-number.ocamlembedded</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storagetypes</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(mutable|ref)\b</string>
			<key>name</key>
			<string>keyword.other.storage.modifier.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>`[A-Za-z][a-zA-Z0-9'_]*\b</string>
			<key>name</key>
			<string>constant.language.variant.polymorphic.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Z][a-zA-Z0-9'_]*\b</string>
			<key>name</key>
			<string>constant.language.variant.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>!=|:=|&gt;|&lt;</string>
			<key>name</key>
			<string>keyword.operator.symbol.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[*+/-]\.</string>
			<key>name</key>
			<string>keyword.operator.infix.floating-point.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>~-\.</string>
			<key>name</key>
			<string>keyword.operator.prefix.floating-point.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>::</string>
			<key>name</key>
			<string>punctuation.definition.list.constructor.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;;</string>
			<key>name</key>
			<string>punctuation.terminator.expression.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.separator.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-&gt;</string>
			<key>name</key>
			<string>punctuation.separator.function-return.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[=&lt;&gt;@^&amp;+\-*/$%|][|!$%&amp;*+./:&lt;=&gt;?@^~-]*</string>
			<key>name</key>
			<string>keyword.operator.infix.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bnot\b|!|[!\?~][!$%&amp;*+./:&lt;=&gt;?@^~-]+</string>
			<key>name</key>
			<string>keyword.operator.prefix.ocamlembedded</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.argument-label.ocamlembedded</string>
				</dict>
			</dict>
			<key>match</key>
			<string>~[a-z][a-z0-9'_]*(:)?</string>
			<key>name</key>
			<string>entity.name.tag.label.ocamlembedded</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(begin)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin-end.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(end)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin-end.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.begin-end-group.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(for)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.for-loop.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(done)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.for-loop.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.for-loop.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bdo\b</string>
					<key>name</key>
					<string>keyword.control.loop.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(while)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.while-loop.ocamlembedded</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\b(done)\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.while-loop.ocamlembedded</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.while-loop.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bdo\b</string>
					<key>name</key>
					<string>keyword.control.loop.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.paren-group.ocamlembedded</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|land|lor|lsl|lsr|asr|lnot|lxor|mod|or)\b</string>
			<key>name</key>
			<string>keyword.operator.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(downto|if|else|match|then|to|when|with|try)\b</string>
			<key>name</key>
			<string>keyword.control.ocamlembedded</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(as|assert|class|constraint|exception|external|functor|in|include|inherit|initializer|lazy|let|mod|module|mutable|new|object|open|private|rec|sig|struct|type|virtual)\b</string>
			<key>name</key>
			<string>keyword.other.ocamlembedded</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#module-signature</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(’|‘|“|”)</string>
			<key>name</key>
			<string>invalid.illegal.unrecognized-character.ocamlembedded</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>arrays</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[\|)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\|])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arrays</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments_inner</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[^\\])(")</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>comment.block.string.quoted.double.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\d\d|[bnrt'"\\])</string>
							<key>name</key>
							<string>comment.block.string.constant.character.escape.ocamlembedded</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.empty-typing-pair.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-typing-pair.parens.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.empty-typing-pair.ocamlembedded</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:\[\s*(\])|\((\))|\(\s*(\)))</string>
					<key>name</key>
					<string>constant.language.pseudo-variable.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b-?[0-9][0-9_]*((\.([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))</string>
					<key>name</key>
					<string>constant.numeric.floating-point.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))n</string>
					<key>name</key>
					<string>constant.numeric.integer.nativeint.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))L</string>
					<key>name</key>
					<string>constant.numeric.integer.int64.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))l</string>
					<key>name</key>
					<string>constant.numeric.integer.int32.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))</string>
					<key>name</key>
					<string>constant.numeric.integer.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'(.|\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\d\d|[bnrt'"\\]))'</string>
					<key>name</key>
					<string>constant.character.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>definite_storagetypes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storagetypes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z0-9'_]+\b</string>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>lists</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[)(?!\||&lt;|&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.begin.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;!\||&gt;)(])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.list.end.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.list.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#lists</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>matchpatterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b_\b</string>
					<key>name</key>
					<string>constant.language.universal-match.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|(?=\s*\S)</string>
					<key>name</key>
					<string>punctuation.separator.match-pattern.ocamlembedded</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?=(?!=.*?-&gt;).*?\|)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.match-option.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.match-option.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.match-option.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\|</string>
							<key>name</key>
							<string>punctuation.separator.match-option.ocamlembedded</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#matchpatterns</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#moduleref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>module-signature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(val)\s+([a-z_][a-zA-Z0-9_']*)\s*(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.value-signature.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.type-constraint.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\b(type|val|external|class|module|end)\b)|^\s*$</string>
					<key>name</key>
					<string>meta.module.signature.val.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.question-mark.optional-parameter.ocamlembedded</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.label.optional.ocamlembedded</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.optional-parameter.ocamlembedded</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>variable.parameter.ameter.optional.ocamlembedded</string>
							<key>match</key>
							<string>(\?)([a-z][a-zA-Z0-9_]*)\s*(:)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>([a-z][a-zA-Z0-9'_]*)\s*(:)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.label.ocamlembedded</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.label.ocamlembedded</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>storage.type.ocamlembedded</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>variable.parameter.labeled.ocamlembedded</string>
							<key>end</key>
							<string>\s</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#definite_storagetypes</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(external)\s+([a-z_][a-zA-Z0-9_']*)\s*(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.external-signature.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.type-constraint.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\b(type|val|external|class|module|let|end)\b)|^\s*$</string>
					<key>name</key>
					<string>meta.module.signature.external.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.question-mark.optional-parameter.ocamlembedded</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.label.optional.ocamlembedded</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.optional-parameter.ocamlembedded</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>variable.parameter.optional.ocamlembedded</string>
							<key>match</key>
							<string>(\?)([a-z][a-zA-Z0-9_]*)\s*(:)</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(~)([a-z][a-zA-Z0-9'_]*)\s*(:)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.tilde.labeled-parameter.ocamlembedded</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.label.ocamlembedded</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.label.ocamlembedded</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>variable.parameter.labeled.ocamlembedded</string>
							<key>end</key>
							<string>\s</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#variables</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>moduleref</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.other.module.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.module-reference.ocamlembedded</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([A-Z][a-zA-Z0-9'_]*)(\.)</string>
					<key>name</key>
					<string>meta.module-reference.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>storagetypes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(int|char|float|string|list|array|bool|unit|exn|option|int32|int64|nativeint|format4|lazy_t)\b</string>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#[a-z_][a-zA-Z0-9_]*</string>
					<key>name</key>
					<string>storage.type.variant.polymorphic.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[^\\])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\$[ \t]*</string>
							<key>name</key>
							<string>punctuation.separator.string.ignore-eol.ocamlembedded</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\d\d|[bnrt'"\\])</string>
							<key>name</key>
							<string>constant.character.string.escape.ocamlembedded</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\[\|\(\)1-9$^.*+?\[\]]</string>
							<key>name</key>
							<string>constant.character.regexp.escape.ocamlembedded</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\(?!(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\d\d|[bnrt'"\\]|[\|\(\)1-9$^.*+?\[\]]|$[ \t]*))(?:.)</string>
							<key>name</key>
							<string>invalid.illegal.character.string.escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{([a-z_]*)\|</string>
					<key>end</key>
					<string>\|\1}</string>
					<key>name</key>
					<string>string.quoted.brace.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>typedefs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>punctuation.separator.variant-definition.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments_inner</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.paren-group.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\bmodule\b</string>
							<key>name</key>
							<string>keyword.other.ocamlembedded</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\bof\b</string>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storagetypes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\s|\()['a-z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>storage.type.ocamlembedded</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.other.module.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.module.ocamlembedded</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b((?:[A-Z][a-zA-Z0-9'_]*)(?:\.[A-Z][a-zA-Z0-9'_]+)*)(\.[a-zA-Z0-9'_]+)</string>
					<key>name</key>
					<string>meta.module.type.ocamlembedded</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[(&gt;|&lt;)?)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.polymorphic-variant.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.polymorphic-variant.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.polymorphic-variant.definition.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typedefs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>punctuation.separator.algebraic-type.ocamlembedded</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#moduleref</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(~)([a-z][a-zA-Z0-9'_]*)(\s*:\s*)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.tilde.labeled-parameter.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.label.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.label.ocamlembedded</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>variable.parameter.labeled.ocamlembedded</string>
					<key>end</key>
					<string>(?=(-&gt;|\s))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.question-mark.optional-parameter.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.label.optional.ocamlembedded</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>variable.parameter.optional.ocamlembedded</string>
					<key>match</key>
					<string>(\?)([a-z][a-zA-Z0-9_]*)</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\?)(\()([a-z_][a-zA-Z0-9'_]*)\s*(=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.question-mark.optional-parameter.ocamlembedded</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.optional-parameter.ocamlembedded</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.label.optional.ocamlembedded</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.optional-parameter-assignment.ocamlembedded</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>variable.parameter.optional.ocamlembedded</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.optional-parameter.ocamlembedded</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?=(~[a-z][a-zA-Z0-9_]*:|("(\\"|[^\\"])*")|[^\(\)~"])+(?&lt;!:)(:&gt;|:(?![:=])))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.type-constraint.ocamlembedded</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.type-constraint.ocamlembedded</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.parameter.type-constrained.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!:)(:&gt;|:(?![:=]))</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.type-constraint.ocamlembedded</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>storage.type.ocamlembedded</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>end</key>
									<string>\)</string>
									<key>name</key>
									<string>meta.paren.group</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments_inner</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.paren-group.ocamlembedded</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tuple.ocamlembedded</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>variable.parameter.tuple.ocamlembedded</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tuple.ocamlembedded</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#matchpatterns</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variables</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.tuple.ocamlembedded</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.record.ocamlembedded</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>variable.parameter.record.ocamlembedded</string>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.record.ocamlembedded</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#moduleref</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b([a-z][a-zA-Z0-9'_]*)\s*(=)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.record.label.ocamlembedded</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.record.field-assignment.ocamlembedded</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(;)|(?=\})</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.record.ocamlembedded</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.recordfield.match.ocamlembedded</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#matchpatterns</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#storagetypes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bas\b</string>
					<key>name</key>
					<string>keyword.other.ocamlembedded</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-z_][a-zA-Z0-9'_]*</string>
					<key>name</key>
					<string>variable.parameter.ocamlembedded</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ocamlembedded</string>
	<key>uuid</key>
	<string>F816FA69-6EE8-11D9-BF2D-000D93589AF6</string>
</dict>
</plist>
